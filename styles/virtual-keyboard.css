/* Virtual Keyboard Styles */
.virtual-keyboard {
  width: 100%;
  max-width: 100%;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  position: relative;
  height: 100%;
}

.keyboard-container {
  direction: ltr;
}

/* Main keyboard theme */
.keyboard-container .hg-theme-default {
  background: #2D2D2D;
  border-radius: 0;
  padding: 8px 8px 56px 8px; /* push keyboard up from bottom */
  box-shadow: none;
  border: none;
  width: 100%;
  height: 100%;
}

/* Individual keys */
.keyboard-container .hg-theme-default .hg-button {
  background: #4A4A4A;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 6px;
  color: #FFFFFF;
  font-size: 16px;
  font-weight: 400;
  height: 35px; /* slightly reduced key height */
  margin: 2px;
  transition: none;
  box-shadow: none;
  text-shadow: none;
  user-select: none;
  cursor: pointer;
}

/* Key hover state */
.keyboard-container .hg-theme-default .hg-button:hover {
  background: #5A5A5A;
  transform: none;
  box-shadow: none;
  border-color: rgba(255, 255, 255, 0.2);
}

/* Key active/pressed state */
.keyboard-container .hg-theme-default .hg-button:active,
.keyboard-container .hg-theme-default .hg-button.hg-selectedButton {
  background: #3A3A3A;
  transform: none;
  box-shadow: none;
  border-color: rgba(255, 255, 255, 0.05);
}

/* Key rows */
.keyboard-container .hg-theme-default .hg-row {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 6px;
  position: relative;
}

.keyboard-container .hg-theme-default .hg-row:last-child {
  margin-bottom: 0;
}

/* Staggered keyboard layout */
.keyboard-container .hg-theme-default .hg-row:nth-child(2) {
  margin-left: 15px; /* Second row offset */
  margin-right: 5%;
}

/* Special keys styling - subtle accent colors */
.keyboard-container .hg-theme-default .hg-button[data-skbtn="{shift}"] {
  background: #5A5A5A;
  color: white;
  border-color: rgba(255, 255, 255, 0.15);
  font-weight: 500;
  /* Remove direct background image to avoid filtering whole button */
  background-image: none;
  position: relative;
  color: transparent;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{shift}"]:hover {
  background: #6A6A6A;
}

/* Render the icon as a pseudo-element so only the icon is brightened */
.keyboard-container .hg-theme-default .hg-button[data-skbtn="{shift}"]::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 18px;
  height: 18px;
  transform: translate(-50%, -50%);
  background-image: url('/svg/shift-1.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  pointer-events: none;
  /* Brighten dark SVG icon only */
  filter: invert(1) brightness(1.6) contrast(1.1);
}

/* Caps lock visual state on shift */
.keyboard-container .hg-theme-default .hg-button.shift-lock[data-skbtn="{shift}"] {
  background: #7A7A7A;
  border-color: rgba(255, 255, 255, 0.35);
  box-shadow: inset 0 0 0 2px rgba(255,255,255,0.15);
}

/* Single-use shift visual state */
.keyboard-container .hg-theme-default .hg-button.shift-single[data-skbtn="{shift}"] {
  background: #6A6A6A;
}

/* Swap the icon per state via pseudo-element */
.keyboard-container .hg-theme-default .hg-button.shift-single[data-skbtn="{shift}"]::after {
  background-image: url('/svg/shift-2.svg');
}
.keyboard-container .hg-theme-default .hg-button.shift-lock[data-skbtn="{shift}"]::after {
  background-image: url('/svg/shift-3.svg');
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{backspace}"] {
  background: #5A5A5A;
  color: white;
  border-color: rgba(255, 255, 255, 0.15);
  font-weight: 500;
  background-image: none;
  position: relative;
  color: transparent;
  width: auto !important;
  min-width: 50px !important;
  max-width: 80px !important;
  flex: 0 0 auto !important;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{backspace}"]:hover {
  background: #6A6A6A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{backspace}"]::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 18px;
  height: 18px;
  transform: translate(-50%, -50%);
  background-image: url('/svg/backspace.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  pointer-events: none;
  filter: invert(1) brightness(1.6) contrast(1.1);
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{space}"] {
  background: #5A5A5A;
  color: white;
  border-color: rgba(255, 255, 255, 0.15);
  font-weight: 500;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{space}"]:hover {
  background: #6A6A6A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{enter}"] {
  background: #5A5A5A;
  color: white;
  border-color: rgba(255, 255, 255, 0.15);
  font-weight: 500;
  width: auto !important;
  min-width: unset !important;
  flex: 0 0 auto !important;
  max-width: 60px;
  background-image: none;
  position: relative;
  color: transparent;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{enter}"]:hover {
  background: #6A6A6A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{enter}"]::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 18px;
  height: 18px;
  transform: translate(-50%, -50%);
  background-image: url('/svg/enter.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  pointer-events: none;
  filter: invert(1) brightness(1.6) contrast(1.1);
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{numbers}"] {
  background: #5A5A5A;
  color: white;
  border-color: rgba(255, 255, 255, 0.15);
  font-weight: 500;
  width: auto !important;
  min-width: unset !important;
  flex: 0 0 auto !important;
  max-width: 50px;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{numbers}"]:hover {
  background: #6A6A6A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{abc}"] {
  background: #5A5A5A;
  color: white;
  border-color: rgba(255, 255, 255, 0.15);
  font-weight: 500;
  width: 60px !important;
  min-width: 60px !important;
  flex: 0 0 60px !important;
}

/* Symbols key style similar to numbers */
.keyboard-container .hg-theme-default .hg-button[data-skbtn="{symbols}"] {
  background: #5A5A5A;
  color: white;
  border-color: rgba(255, 255, 255, 0.15);
  font-weight: 500;
  width: auto !important;
  min-width: unset !important;
  flex: 0 0 auto !important;
  max-width: 50px;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{symbols}"]:hover {
  background: #6A6A6A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{abc}"]:hover {
  background: #6A6A6A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{vietnamese}"] {
  background: #4A4A4A;
  color: white;
  border-color: rgba(255, 255, 255, 0.1);
  font-weight: 500;
  width: auto !important;
  min-width: unset !important;
  flex: 0 0 auto !important;
  max-width: 50px;
  background-image: none;
  position: relative;
  color: transparent;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{vietnamese}"]:hover {
  background: #5A5A5A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{vietnamese}"]::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 18px;
  height: 18px;
  transform: translate(-50%, -50%);
  background-image: url('/svg/earth.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  pointer-events: none;
  filter: invert(1) brightness(1.6) contrast(1.1);
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{english}"] {
  background: #4A4A4A;
  color: white;
  border-color: rgba(255, 255, 255, 0.1);
  font-weight: 500;
  width: auto !important;
  min-width: unset !important;
  flex: 0 0 auto !important;
  max-width: 50px;
  background-image: none;
  position: relative;
  color: transparent;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{english}"]:hover {
  background: #5A5A5A;
}

.keyboard-container .hg-theme-default .hg-button[data-skbtn="{english}"]::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 18px;
  height: 18px;
  transform: translate(-50%, -50%);
  background-image: url('/svg/earth.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  pointer-events: none;
  filter: invert(1) brightness(1.6) contrast(1.1);
}

/* Make period button smaller like language buttons */
.keyboard-container .hg-theme-default .hg-button[data-skbtn="."] {
  width: 40px !important;
  min-width: 40px !important;
  flex: 0 0 40px !important;
}

/* Make comma button small like period */
.keyboard-container .hg-theme-default .hg-button[data-skbtn=","] {
  width: 40px !important;
  min-width: 40px !important;
  flex: 0 0 40px !important;
}

/* Responsive design */
@media (max-width: 768px) {
  .keyboard-container .hg-theme-default .hg-button {
    font-size: 14px;
    height: 44px;
    margin: 1px;
  }
  
  .keyboard-container .hg-theme-default {
    padding: 8px 8px 56px 8px; /* keep bottom space on small screens */
  }
}

@media (max-width: 480px) {
  .keyboard-container .hg-theme-default .hg-button {
    font-size: 12px;
    height: 40px;
    margin: 1px;
  }
  
  .keyboard-container .hg-theme-default {
    padding: 6px 6px 48px 6px; /* keep bottom space on very small screens */
  }
}


/* Animation for key press feedback */
/* Remove key press animation for performance */
.keyboard-container .hg-theme-default .hg-button.hg-activeButton {
  animation: none;
}

/* Focus styles for accessibility */
.keyboard-container .hg-theme-default .hg-button:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .keyboard-container .hg-theme-default .hg-button {
    border-width: 2px;
    border-color: #000000;
  }
  
  .keyboard-container .hg-theme-default .hg-button:hover {
    border-color: #333333;
  }
}
